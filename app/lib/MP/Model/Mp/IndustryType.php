<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace MP\Model\Mp;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class IndustryType implements ValidatorInterface
{
    const INTERNET = 'internet';
    const RESTAURANT = 'restaurant';
    const PROCUREMENT = 'procurement';
    const HOUSE = 'house';
    const FIANCE = 'fiance';
    const CULTURE = 'culture';
    const RETAIL = 'retail';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::INTERNET => _META_('mp.industry_type.internet'),
                self::RESTAURANT => _META_('mp.industry_type.restaurant'),
                self::PROCUREMENT => _META_('mp.industry_type.procurement'),
                self::HOUSE => _META_('mp.industry_type.house'),
                self::FIANCE => _META_('mp.industry_type.fiance'),
                self::CULTURE => _META_('mp.industry_type.culture'),
                self::RETAIL => _META_('mp.industry_type.retail'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::INTERNET;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}