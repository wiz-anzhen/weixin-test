<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class CommunityConfig extends Model
{
    const COMMUNITY_CONFIG_ID = 'community_config_id';
    const MP_USER_ID = 'mp_user_id';
    const COMMUNITY_ID = 'community_id';
    const CONFIG_VALUE = 'config_value';
    const CONFIG_TYPE = 'config_type';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'community_config',
                'community_config_id',
                [
                    'community_config_id' => ['name' => _META_('mp.community_config.community_config_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.community_config.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'community_id' => ['name' => _META_('mp.community_config.community_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'config_value' => ['name' => _META_('mp.community_config.config_value'), 'type' => 'text'],
                    'config_type' => ['name' => _META_('mp.community_config.config_type'), 'type' => 'text', 'max' => 32, 'required' => true, 'enum' => new CommunityConfigType(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'community_config_id',
                    'unique_keys' => [['community_id', 'config_type']],
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getCommunityConfigID()
    {
        return $this->__get(self::COMMUNITY_CONFIG_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return CommunityConfig
     */
    public function setCommunityConfigID($value)
    {
        $this->__set(self::COMMUNITY_CONFIG_ID, $value);

        return $this;
    }

    /**
     * Gets mp_user.mp_user_id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets mp_user.mp_user_id
     * @param int $value
     * @return CommunityConfig
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets community.community_id
     * @return int
     */
    public function getCommunityID()
    {
        return $this->__get(self::COMMUNITY_ID);
    }

    /**
     * Sets community.community_id
     * @param int $value
     * @return CommunityConfig
     */
    public function setCommunityID($value)
    {
        $this->__set(self::COMMUNITY_ID, $value);

        return $this;
    }

    /**
     * Gets 社区配置值
     * @return string
     */
    public function getConfigValue()
    {
        return $this->__get(self::CONFIG_VALUE);
    }

    /**
     * Sets 社区配置值
     * @param string $value
     * @return CommunityConfig
     */
    public function setConfigValue($value)
    {
        $this->__set(self::CONFIG_VALUE, $value);

        return $this;
    }

    /**
     * Gets 社区配置类型
     * @return string
     */
    public function getConfigType()
    {
        return $this->__get(self::CONFIG_TYPE);
    }

    /**
     * Gets 社区配置类型 display name
     * @return string
     */
    public function getConfigType_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('config_type');
        return $option['enum']::getDisplayName($this->__get(self::CONFIG_TYPE));
    }

    /**
     * Sets 社区配置类型
     * @param string $value
     * @return CommunityConfig
     */
    public function setConfigType($value)
    {
        $this->__set(self::CONFIG_TYPE, $value);

        return $this;
    }
}
?>