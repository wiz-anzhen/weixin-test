<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class ChannelArticle extends Model
{
    const CHANNEL_ARTICLE_ID = 'channel_article_id';
    const MP_USER_ID = 'mp_user_id';
    const COMMUNITY_ID = 'community_id';
    const CHANNEL_ID = 'channel_id';
    const ARTICLE_TITLE = 'article_title';
    const SHARE_URL = 'share_url';
    const ARTICLE_DESC = 'article_desc';
    const ARTICLE_URL = 'article_url';
    const RELEASE_DATE = 'release_date';
    const KEEP_TOP = 'keep_top';
    const ARTICLE_DETAIL = 'article_detail';
    const ARTICLE_TYPE = 'article_type';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'channel_article',
                'channel_article_id',
                [
                    'channel_article_id' => ['name' => _META_('mp.channel_article.channel_article_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.channel_article.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'community_id' => ['name' => _META_('mp.channel_article.community_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'channel_id' => ['name' => _META_('mp.channel_article.channel_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'article_title' => ['name' => _META_('mp.channel_article.article_title'), 'type' => 'text', 'length' => 255],
                    'share_url' => ['name' => _META_('mp.channel_article.share_url'), 'type' => 'url'],
                    'article_desc' => ['name' => _META_('mp.channel_article.article_desc'), 'type' => 'text'],
                    'article_url' => ['name' => _META_('mp.channel_article.article_url'), 'type' => 'url'],
                    'release_date' => ['name' => _META_('mp.channel_article.release_date'), 'type' => 'date', 'required' => true],
                    'keep_top' => ['name' => _META_('mp.channel_article.keep_top'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'article_detail' => ['name' => _META_('mp.channel_article.article_detail'), 'type' => 'text'],
                    'article_type' => ['name' => _META_('mp.channel_article.article_type'), 'type' => 'text', 'max' => 32, 'required' => true, 'enum' => new ArticleType(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'channel_article_id',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getChannelArticleID()
    {
        return $this->__get(self::CHANNEL_ARTICLE_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return ChannelArticle
     */
    public function setChannelArticleID($value)
    {
        $this->__set(self::CHANNEL_ARTICLE_ID, $value);

        return $this;
    }

    /**
     * Gets mp_user.mp_user_id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets mp_user.mp_user_id
     * @param int $value
     * @return ChannelArticle
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets community.community_id
     * @return int
     */
    public function getCommunityID()
    {
        return $this->__get(self::COMMUNITY_ID);
    }

    /**
     * Sets community.community_id
     * @param int $value
     * @return ChannelArticle
     */
    public function setCommunityID($value)
    {
        $this->__set(self::COMMUNITY_ID, $value);

        return $this;
    }

    /**
     * Gets channel.channel_id
     * @return int
     */
    public function getChannelID()
    {
        return $this->__get(self::CHANNEL_ID);
    }

    /**
     * Sets channel.channel_id
     * @param int $value
     * @return ChannelArticle
     */
    public function setChannelID($value)
    {
        $this->__set(self::CHANNEL_ID, $value);

        return $this;
    }

    /**
     * Gets 标题
     * @return string
     */
    public function getArticleTitle()
    {
        return $this->__get(self::ARTICLE_TITLE);
    }

    /**
     * Sets 标题
     * @param string $value
     * @return ChannelArticle
     */
    public function setArticleTitle($value)
    {
        $this->__set(self::ARTICLE_TITLE, $value);

        return $this;
    }

    /**
     * Gets 分享图片
     * @return string
     */
    public function getShareUrl()
    {
        return $this->__get(self::SHARE_URL);
    }

    /**
     * Sets 分享图片
     * @param string $value
     * @return ChannelArticle
     */
    public function setShareUrl($value)
    {
        $this->__set(self::SHARE_URL, $value);

        return $this;
    }

    /**
     * Gets 摘要
     * @return string
     */
    public function getArticleDesc()
    {
        return $this->__get(self::ARTICLE_DESC);
    }

    /**
     * Sets 摘要
     * @param string $value
     * @return ChannelArticle
     */
    public function setArticleDesc($value)
    {
        $this->__set(self::ARTICLE_DESC, $value);

        return $this;
    }

    /**
     * Gets 外部链接
     * @return string
     */
    public function getArticleUrl()
    {
        return $this->__get(self::ARTICLE_URL);
    }

    /**
     * Sets 外部链接
     * @param string $value
     * @return ChannelArticle
     */
    public function setArticleUrl($value)
    {
        $this->__set(self::ARTICLE_URL, $value);

        return $this;
    }

    /**
     * Gets 发布日期
     * @return string
     */
    public function getReleaseDate()
    {
        return $this->__get(self::RELEASE_DATE);
    }

    /**
     * Sets 发布日期
     * @param string $value
     * @return ChannelArticle
     */
    public function setReleaseDate($value)
    {
        $this->__set(self::RELEASE_DATE, $value);

        return $this;
    }

    /**
     * Gets 置顶
     * @return int
     */
    public function getKeepTop()
    {
        return $this->__get(self::KEEP_TOP);
    }

    /**
     * Sets 置顶
     * @param int $value
     * @return ChannelArticle
     */
    public function setKeepTop($value)
    {
        $this->__set(self::KEEP_TOP, $value);

        return $this;
    }

    /**
     * Gets 正文
     * @return string
     */
    public function getArticleDetail()
    {
        return $this->__get(self::ARTICLE_DETAIL);
    }

    /**
     * Sets 正文
     * @param string $value
     * @return ChannelArticle
     */
    public function setArticleDetail($value)
    {
        $this->__set(self::ARTICLE_DETAIL, $value);

        return $this;
    }

    /**
     * Gets 来源
     * @return string
     */
    public function getArticleType()
    {
        return $this->__get(self::ARTICLE_TYPE);
    }

    /**
     * Gets 来源 display name
     * @return string
     */
    public function getArticleType_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('article_type');
        return $option['enum']::getDisplayName($this->__get(self::ARTICLE_TYPE));
    }

    /**
     * Sets 来源
     * @param string $value
     * @return ChannelArticle
     */
    public function setArticleType($value)
    {
        $this->__set(self::ARTICLE_TYPE, $value);

        return $this;
    }
}
?>