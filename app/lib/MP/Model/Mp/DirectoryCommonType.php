<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace MP\Model\Mp;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class DirectoryCommonType implements ValidatorInterface
{
    const TEXT = 'text';
    const LINK = 'link';
    const USER_BILL_LIST = 'user_bill_list';
    const USER_SETTING = 'user_setting';
    const USER_ORDER = 'user_order';
    const USER_VIP_CARD = 'user_vip_card';
    const USER_CS_CERTIFY = 'user_cs_certify';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::TEXT => _META_('mp.directory_common_type.text'),
                self::LINK => _META_('mp.directory_common_type.link'),
                self::USER_BILL_LIST => _META_('mp.directory_common_type.user_bill_list'),
                self::USER_SETTING => _META_('mp.directory_common_type.user_setting'),
                self::USER_ORDER => _META_('mp.directory_common_type.user_order'),
                self::USER_VIP_CARD => _META_('mp.directory_common_type.user_vip_card'),
                self::USER_CS_CERTIFY => _META_('mp.directory_common_type.user_cs_certify'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::TEXT;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}