<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace MP\Model\Mp;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class WeixinMessageType implements ValidatorInterface
{
    const TEXT = 'text';
    const VOICE = 'voice';
    const NEWS = 'news';
    const IMAGE = 'image';
    const EVENT = 'event';
    const LOCATION = 'location';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::TEXT => _META_('mp.weixin_message_type.text'),
                self::VOICE => _META_('mp.weixin_message_type.voice'),
                self::NEWS => _META_('mp.weixin_message_type.news'),
                self::IMAGE => _META_('mp.weixin_message_type.image'),
                self::EVENT => _META_('mp.weixin_message_type.event'),
                self::LOCATION => _META_('mp.weixin_message_type.location'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::TEXT;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}