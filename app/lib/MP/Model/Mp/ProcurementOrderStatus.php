<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace MP\Model\Mp;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class ProcurementOrderStatus implements ValidatorInterface
{
    const NONE = 'none';
    const CHEF_VERIFY = 'chef_verify';
    const SUPPLY_VERIFY = 'supply_verify';
    const SUPPLY_SEND = 'supply_send';
    const EXAMINE = 'examine';
    const SUPPLY_EXAMINE = 'supply_examine';
    const REFUND = 'refund';
    const REFUND_FINISHED = 'refund_finished';
    const FINISHED = 'finished';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::NONE => _META_('mp.procurement_order_status.none'),
                self::CHEF_VERIFY => _META_('mp.procurement_order_status.chef_verify'),
                self::SUPPLY_VERIFY => _META_('mp.procurement_order_status.supply_verify'),
                self::SUPPLY_SEND => _META_('mp.procurement_order_status.supply_send'),
                self::EXAMINE => _META_('mp.procurement_order_status.examine'),
                self::SUPPLY_EXAMINE => _META_('mp.procurement_order_status.supply_examine'),
                self::REFUND => _META_('mp.procurement_order_status.refund'),
                self::REFUND_FINISHED => _META_('mp.procurement_order_status.refund_finished'),
                self::FINISHED => _META_('mp.procurement_order_status.finished'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::NONE;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}