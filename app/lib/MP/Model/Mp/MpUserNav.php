<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class MpUserNav extends Model
{
    const MP_USER_NAV_ID = 'mp_user_nav_id';
    const MP_USER_ID = 'mp_user_id';
    const TITLE = 'title';
    const DESCRIPTION = 'description';
    const PIC_URL = 'pic_url';
    const URL = 'url';
    const SORT_NO = 'sort_no';
    const NAVIGATION_TYPE = 'navigation_type';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'mp_user_nav',
                'mp_user_nav_id',
                [
                    'mp_user_nav_id' => ['name' => _META_('mp.mp_user_nav.mp_user_nav_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.mp_user_nav.mp_user_id'), 'type' => 'int', 'length' => 10, 'db_insert' => true, 'required' => true],
                    'title' => ['name' => _META_('mp.mp_user_nav.title'), 'type' => 'text'],
                    'description' => ['name' => _META_('mp.mp_user_nav.description'), 'type' => 'text'],
                    'pic_url' => ['name' => _META_('mp.mp_user_nav.pic_url'), 'type' => 'url'],
                    'url' => ['name' => _META_('mp.mp_user_nav.url'), 'type' => 'url'],
                    'sort_no' => ['name' => _META_('mp.mp_user_nav.sort_no'), 'type' => 'float', 'required' => true],
                    'navigation_type' => ['name' => _META_('mp.mp_user_nav.navigation_type'), 'type' => 'text', 'max' => 32, 'required' => true, 'db_insert' => true, 'enum' => new WxNavigationType()],
                ],
                [
                    'auto_increment_id' => 'mp_user_nav_id',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getMpUserNavID()
    {
        return $this->__get(self::MP_USER_NAV_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return MpUserNav
     */
    public function setMpUserNavID($value)
    {
        $this->__set(self::MP_USER_NAV_ID, $value);

        return $this;
    }

    /**
     * Gets mp_user.mp_user_id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets mp_user.mp_user_id
     * @param int $value
     * @return MpUserNav
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets 标题
     * @return string
     */
    public function getTitle()
    {
        return $this->__get(self::TITLE);
    }

    /**
     * Sets 标题
     * @param string $value
     * @return MpUserNav
     */
    public function setTitle($value)
    {
        $this->__set(self::TITLE, $value);

        return $this;
    }

    /**
     * Gets 描述
     * @return string
     */
    public function getDescription()
    {
        return $this->__get(self::DESCRIPTION);
    }

    /**
     * Sets 描述
     * @param string $value
     * @return MpUserNav
     */
    public function setDescription($value)
    {
        $this->__set(self::DESCRIPTION, $value);

        return $this;
    }

    /**
     * Gets 图片url
     * @return string
     */
    public function getPicUrl()
    {
        return $this->__get(self::PIC_URL);
    }

    /**
     * Sets 图片url
     * @param string $value
     * @return MpUserNav
     */
    public function setPicUrl($value)
    {
        $this->__set(self::PIC_URL, $value);

        return $this;
    }

    /**
     * Gets 图文消息url
     * @return string
     */
    public function getUrl()
    {
        return $this->__get(self::URL);
    }

    /**
     * Sets 图文消息url
     * @param string $value
     * @return MpUserNav
     */
    public function setUrl($value)
    {
        $this->__set(self::URL, $value);

        return $this;
    }

    /**
     * Gets 排序字段
     * @return float
     */
    public function getSortNo()
    {
        return $this->__get(self::SORT_NO);
    }

    /**
     * Sets 排序字段
     * @param float $value
     * @return MpUserNav
     */
    public function setSortNo($value)
    {
        $this->__set(self::SORT_NO, $value);

        return $this;
    }

    /**
     * Gets 微信导航类型
     * @return string
     */
    public function getNavigationType()
    {
        return $this->__get(self::NAVIGATION_TYPE);
    }

    /**
     * Gets 微信导航类型 display name
     * @return string
     */
    public function getNavigationType_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('navigation_type');
        return $option['enum']::getDisplayName($this->__get(self::NAVIGATION_TYPE));
    }

    /**
     * Sets 微信导航类型
     * @param string $value
     * @return MpUserNav
     */
    public function setNavigationType($value)
    {
        $this->__set(self::NAVIGATION_TYPE, $value);

        return $this;
    }
}
?>