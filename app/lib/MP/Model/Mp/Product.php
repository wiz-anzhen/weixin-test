<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class Product extends Model
{
    const PRODUCT_ID = 'product_id';
    const _CREATED_AT = '_created_at';
    const IS_ON_SHELF = 'is_on_shelf';
    const COST_PRICE = 'cost_price';
    const REFERENCE_PRICE = 'reference_price';
    const PROFIT = 'profit';
    const COMMISSIONS = 'commissions';
    const MP_USER_ID = 'mp_user_id';
    const COMMUNITY_ID = 'community_id';
    const STORE_ID = 'store_id';
    const CATEGORY_ID = 'category_id';
    const TITLE = 'title';
    const IMG_URL = 'img_url';
    const BIG_IMG_URL = 'big_img_url';
    const PRICE = 'price';
    const DESCRIPTION = 'description';
    const SORT_NO = 'sort_no';
    const COMMENT = 'comment';
    const DETAIL_URL = 'detail_url';
    const DETAIL = 'detail';
    const PARAMETERS_URL = 'parameters_url';
    const IS_DELETE = 'is_delete';
    const PRODUCT_UNIT = 'product_unit';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'product',
                'product_id',
                [
                    'product_id' => ['name' => _META_('mp.product.product_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('mp.product._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'is_on_shelf' => ['name' => _META_('mp.product.is_on_shelf'), 'type' => 'bool', 'db_insert' => true, 'required' => true],
                    'cost_price' => ['name' => _META_('mp.product.cost_price'), 'type' => 'money', 'precision' => 2],
                    'reference_price' => ['name' => _META_('mp.product.reference_price'), 'type' => 'money', 'precision' => 2],
                    'profit' => ['name' => _META_('mp.product.profit'), 'type' => 'money', 'precision' => 2],
                    'commissions' => ['name' => _META_('mp.product.commissions'), 'type' => 'money', 'precision' => 2],
                    'mp_user_id' => ['name' => _META_('mp.product.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'community_id' => ['name' => _META_('mp.product.community_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'store_id' => ['name' => _META_('mp.product.store_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'category_id' => ['name' => _META_('mp.product.category_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'title' => ['name' => _META_('mp.product.title'), 'type' => 'text', 'length' => 128, 'required' => true],
                    'img_url' => ['name' => _META_('mp.product.img_url'), 'type' => 'url'],
                    'big_img_url' => ['name' => _META_('mp.product.big_img_url'), 'type' => 'url'],
                    'price' => ['name' => _META_('mp.product.price'), 'type' => 'money', 'db_insert' => true, 'precision' => 2, 'required' => true],
                    'description' => ['name' => _META_('mp.product.description'), 'type' => 'text', 'length' => 128],
                    'sort_no' => ['name' => _META_('mp.product.sort_no'), 'type' => 'float', 'db_insert' => true, 'required' => true],
                    'comment' => ['name' => _META_('mp.product.comment'), 'type' => 'text'],
                    'detail_url' => ['name' => _META_('mp.product.detail_url'), 'type' => 'url'],
                    'detail' => ['name' => _META_('mp.product.detail'), 'type' => 'text'],
                    'parameters_url' => ['name' => _META_('mp.product.parameters_url'), 'type' => 'url'],
                    'is_delete' => ['name' => _META_('mp.product.is_delete'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'product_unit' => ['name' => _META_('mp.product.product_unit'), 'type' => 'text', 'max' => 32, 'enum' => new ProductUnitType(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'product_id',
                    'create_timestamp' => '_created_at',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getProductID()
    {
        return $this->__get(self::PRODUCT_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return Product
     */
    public function setProductID($value)
    {
        $this->__set(self::PRODUCT_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return Product
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 是否上架
     * @return bool
     */
    public function getIsOnShelf()
    {
        return $this->__get(self::IS_ON_SHELF);
    }

    /**
     * Sets 是否上架
     * @param bool $value
     * @return Product
     */
    public function setIsOnShelf($value)
    {
        $this->__set(self::IS_ON_SHELF, $value);

        return $this;
    }

    /**
     * Gets 成本价
     * @return float
     */
    public function getCostPrice()
    {
        return $this->__get(self::COST_PRICE);
    }

    /**
     * Sets 成本价
     * @param float $value
     * @return Product
     */
    public function setCostPrice($value)
    {
        $this->__set(self::COST_PRICE, $value);

        return $this;
    }

    /**
     * Gets 参考价
     * @return float
     */
    public function getReferencePrice()
    {
        return $this->__get(self::REFERENCE_PRICE);
    }

    /**
     * Sets 参考价
     * @param float $value
     * @return Product
     */
    public function setReferencePrice($value)
    {
        $this->__set(self::REFERENCE_PRICE, $value);

        return $this;
    }

    /**
     * Gets 利润
     * @return float
     */
    public function getProfit()
    {
        return $this->__get(self::PROFIT);
    }

    /**
     * Sets 利润
     * @param float $value
     * @return Product
     */
    public function setProfit($value)
    {
        $this->__set(self::PROFIT, $value);

        return $this;
    }

    /**
     * Gets 提成
     * @return float
     */
    public function getCommissions()
    {
        return $this->__get(self::COMMISSIONS);
    }

    /**
     * Sets 提成
     * @param float $value
     * @return Product
     */
    public function setCommissions($value)
    {
        $this->__set(self::COMMISSIONS, $value);

        return $this;
    }

    /**
     * Gets 公众账号id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets 公众账号id
     * @param int $value
     * @return Product
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets community.community_id
     * @return int
     */
    public function getCommunityID()
    {
        return $this->__get(self::COMMUNITY_ID);
    }

    /**
     * Sets community.community_id
     * @param int $value
     * @return Product
     */
    public function setCommunityID($value)
    {
        $this->__set(self::COMMUNITY_ID, $value);

        return $this;
    }

    /**
     * Gets 商城id store.store_id
     * @return int
     */
    public function getStoreID()
    {
        return $this->__get(self::STORE_ID);
    }

    /**
     * Sets 商城id store.store_id
     * @param int $value
     * @return Product
     */
    public function setStoreID($value)
    {
        $this->__set(self::STORE_ID, $value);

        return $this;
    }

    /**
     * Gets 分类id category.category_id
     * @return int
     */
    public function getCategoryID()
    {
        return $this->__get(self::CATEGORY_ID);
    }

    /**
     * Sets 分类id category.category_id
     * @param int $value
     * @return Product
     */
    public function setCategoryID($value)
    {
        $this->__set(self::CATEGORY_ID, $value);

        return $this;
    }

    /**
     * Gets 商品名称
     * @return string
     */
    public function getTitle()
    {
        return $this->__get(self::TITLE);
    }

    /**
     * Sets 商品名称
     * @param string $value
     * @return Product
     */
    public function setTitle($value)
    {
        $this->__set(self::TITLE, $value);

        return $this;
    }

    /**
     * Gets 图片地址
     * @return string
     */
    public function getImgUrl()
    {
        return $this->__get(self::IMG_URL);
    }

    /**
     * Sets 图片地址
     * @param string $value
     * @return Product
     */
    public function setImgUrl($value)
    {
        $this->__set(self::IMG_URL, $value);

        return $this;
    }

    /**
     * Gets 大图片地址
     * @return string
     */
    public function getBigImgUrl()
    {
        return $this->__get(self::BIG_IMG_URL);
    }

    /**
     * Sets 大图片地址
     * @param string $value
     * @return Product
     */
    public function setBigImgUrl($value)
    {
        $this->__set(self::BIG_IMG_URL, $value);

        return $this;
    }

    /**
     * Gets 价格
     * @return float
     */
    public function getPrice()
    {
        return $this->__get(self::PRICE);
    }

    /**
     * Sets 价格
     * @param float $value
     * @return Product
     */
    public function setPrice($value)
    {
        $this->__set(self::PRICE, $value);

        return $this;
    }

    /**
     * Gets 商品描述
     * @return string
     */
    public function getDescription()
    {
        return $this->__get(self::DESCRIPTION);
    }

    /**
     * Sets 商品描述
     * @param string $value
     * @return Product
     */
    public function setDescription($value)
    {
        $this->__set(self::DESCRIPTION, $value);

        return $this;
    }

    /**
     * Gets 排序
     * @return float
     */
    public function getSortNo()
    {
        return $this->__get(self::SORT_NO);
    }

    /**
     * Sets 排序
     * @param float $value
     * @return Product
     */
    public function setSortNo($value)
    {
        $this->__set(self::SORT_NO, $value);

        return $this;
    }

    /**
     * Gets 备注
     * @return string
     */
    public function getComment()
    {
        return $this->__get(self::COMMENT);
    }

    /**
     * Sets 备注
     * @param string $value
     * @return Product
     */
    public function setComment($value)
    {
        $this->__set(self::COMMENT, $value);

        return $this;
    }

    /**
     * Gets 详情地址
     * @return string
     */
    public function getDetailUrl()
    {
        return $this->__get(self::DETAIL_URL);
    }

    /**
     * Sets 详情地址
     * @param string $value
     * @return Product
     */
    public function setDetailUrl($value)
    {
        $this->__set(self::DETAIL_URL, $value);

        return $this;
    }

    /**
     * Gets 商品详情
     * @return string
     */
    public function getDetail()
    {
        return $this->__get(self::DETAIL);
    }

    /**
     * Sets 商品详情
     * @param string $value
     * @return Product
     */
    public function setDetail($value)
    {
        $this->__set(self::DETAIL, $value);

        return $this;
    }

    /**
     * Gets 商品参数地址
     * @return string
     */
    public function getParametersUrl()
    {
        return $this->__get(self::PARAMETERS_URL);
    }

    /**
     * Sets 商品参数地址
     * @param string $value
     * @return Product
     */
    public function setParametersUrl($value)
    {
        $this->__set(self::PARAMETERS_URL, $value);

        return $this;
    }

    /**
     * Gets 是否删除
     * @return int
     */
    public function getIsDelete()
    {
        return $this->__get(self::IS_DELETE);
    }

    /**
     * Sets 是否删除
     * @param int $value
     * @return Product
     */
    public function setIsDelete($value)
    {
        $this->__set(self::IS_DELETE, $value);

        return $this;
    }

    /**
     * Gets 单位
     * @return string
     */
    public function getProductUnit()
    {
        return $this->__get(self::PRODUCT_UNIT);
    }

    /**
     * Gets 单位 display name
     * @return string
     */
    public function getProductUnit_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('product_unit');
        return $option['enum']::getDisplayName($this->__get(self::PRODUCT_UNIT));
    }

    /**
     * Sets 单位
     * @param string $value
     * @return Product
     */
    public function setProductUnit($value)
    {
        $this->__set(self::PRODUCT_UNIT, $value);

        return $this;
    }
}
?>