<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class WxMenu extends Model
{
    const WX_MENU_ID = 'wx_menu_id';
    const MP_USER_ID = 'mp_user_id';
    const ACCESS_AUTHORITY = 'access_authority';
    const NAME = 'name';
    const SORT_NO = 'sort_no';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'wx_menu',
                'wx_menu_id',
                [
                    'wx_menu_id' => ['name' => _META_('mp.wx_menu.wx_menu_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.wx_menu.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'access_authority' => ['name' => _META_('mp.wx_menu.access_authority'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'name' => ['name' => _META_('mp.wx_menu.name'), 'type' => 'text', 'length' => 16, 'required' => true],
                    'sort_no' => ['name' => _META_('mp.wx_menu.sort_no'), 'type' => 'float', 'db_insert' => true, 'required' => true],
                ],
                [
                    'auto_increment_id' => 'wx_menu_id',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getWxMenuID()
    {
        return $this->__get(self::WX_MENU_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return WxMenu
     */
    public function setWxMenuID($value)
    {
        $this->__set(self::WX_MENU_ID, $value);

        return $this;
    }

    /**
     * Gets mp_user.mp_user_id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets mp_user.mp_user_id
     * @param int $value
     * @return WxMenu
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets 访问权限
     * @return int
     */
    public function getAccessAuthority()
    {
        return $this->__get(self::ACCESS_AUTHORITY);
    }

    /**
     * Sets 访问权限
     * @param int $value
     * @return WxMenu
     */
    public function setAccessAuthority($value)
    {
        $this->__set(self::ACCESS_AUTHORITY, $value);

        return $this;
    }

    /**
     * Gets 菜单名字
     * @return string
     */
    public function getName()
    {
        return $this->__get(self::NAME);
    }

    /**
     * Sets 菜单名字
     * @param string $value
     * @return WxMenu
     */
    public function setName($value)
    {
        $this->__set(self::NAME, $value);

        return $this;
    }

    /**
     * Gets 排序id
     * @return float
     */
    public function getSortNo()
    {
        return $this->__get(self::SORT_NO);
    }

    /**
     * Sets 排序id
     * @param float $value
     * @return WxMenu
     */
    public function setSortNo($value)
    {
        $this->__set(self::SORT_NO, $value);

        return $this;
    }
}
?>