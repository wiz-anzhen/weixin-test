<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class Category extends Model
{
    const CATEGORY_ID = 'category_id';
    const _CREATED_AT = '_created_at';
    const MP_USER_ID = 'mp_user_id';
    const COMMUNITY_ID = 'community_id';
    const STORE_ID = 'store_id';
    const TITLE = 'title';
    const COVER_IMG = 'cover_img';
    const DESCRIPTION = 'description';
    const SORT_NO = 'sort_no';
    const COMMENT = 'comment';
    const IS_DELETE = 'is_delete';
    const IS_ON_SHELF = 'is_on_shelf';
    const SEND_AUTHOR = 'send_author';
    const SEND_TIME = 'send_time';
    const SHELF_TIME = 'shelf_time';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'category',
                'category_id',
                [
                    'category_id' => ['name' => _META_('mp.category.category_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('mp.category._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.category.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'community_id' => ['name' => _META_('mp.category.community_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'store_id' => ['name' => _META_('mp.category.store_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'title' => ['name' => _META_('mp.category.title'), 'type' => 'text', 'length' => 64, 'required' => true],
                    'cover_img' => ['name' => _META_('mp.category.cover_img'), 'type' => 'url', 'length' => 64],
                    'description' => ['name' => _META_('mp.category.description'), 'type' => 'text', 'length' => 128],
                    'sort_no' => ['name' => _META_('mp.category.sort_no'), 'type' => 'float', 'db_insert' => true, 'required' => true],
                    'comment' => ['name' => _META_('mp.category.comment'), 'type' => 'text'],
                    'is_delete' => ['name' => _META_('mp.category.is_delete'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'is_on_shelf' => ['name' => _META_('mp.category.is_on_shelf'), 'type' => 'bool', 'db_insert' => true, 'required' => true],
                    'send_author' => ['name' => _META_('mp.category.send_author'), 'type' => 'text', 'length' => 128],
                    'send_time' => ['name' => _META_('mp.category.send_time'), 'type' => 'datetime'],
                    'shelf_time' => ['name' => _META_('mp.category.shelf_time'), 'type' => 'text', 'length' => 128],
                ],
                [
                    'auto_increment_id' => 'category_id',
                    'create_timestamp' => '_created_at',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getCategoryID()
    {
        return $this->__get(self::CATEGORY_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return Category
     */
    public function setCategoryID($value)
    {
        $this->__set(self::CATEGORY_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return Category
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 公众账号id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets 公众账号id
     * @param int $value
     * @return Category
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets community.community_id
     * @return int
     */
    public function getCommunityID()
    {
        return $this->__get(self::COMMUNITY_ID);
    }

    /**
     * Sets community.community_id
     * @param int $value
     * @return Category
     */
    public function setCommunityID($value)
    {
        $this->__set(self::COMMUNITY_ID, $value);

        return $this;
    }

    /**
     * Gets 商城id store.store_id
     * @return int
     */
    public function getStoreID()
    {
        return $this->__get(self::STORE_ID);
    }

    /**
     * Sets 商城id store.store_id
     * @param int $value
     * @return Category
     */
    public function setStoreID($value)
    {
        $this->__set(self::STORE_ID, $value);

        return $this;
    }

    /**
     * Gets 名称
     * @return string
     */
    public function getTitle()
    {
        return $this->__get(self::TITLE);
    }

    /**
     * Sets 名称
     * @param string $value
     * @return Category
     */
    public function setTitle($value)
    {
        $this->__set(self::TITLE, $value);

        return $this;
    }

    /**
     * Gets 分类封面图
     * @return string
     */
    public function getCoverImg()
    {
        return $this->__get(self::COVER_IMG);
    }

    /**
     * Sets 分类封面图
     * @param string $value
     * @return Category
     */
    public function setCoverImg($value)
    {
        $this->__set(self::COVER_IMG, $value);

        return $this;
    }

    /**
     * Gets 分类描述
     * @return string
     */
    public function getDescription()
    {
        return $this->__get(self::DESCRIPTION);
    }

    /**
     * Sets 分类描述
     * @param string $value
     * @return Category
     */
    public function setDescription($value)
    {
        $this->__set(self::DESCRIPTION, $value);

        return $this;
    }

    /**
     * Gets 排序
     * @return float
     */
    public function getSortNo()
    {
        return $this->__get(self::SORT_NO);
    }

    /**
     * Sets 排序
     * @param float $value
     * @return Category
     */
    public function setSortNo($value)
    {
        $this->__set(self::SORT_NO, $value);

        return $this;
    }

    /**
     * Gets 备注
     * @return string
     */
    public function getComment()
    {
        return $this->__get(self::COMMENT);
    }

    /**
     * Sets 备注
     * @param string $value
     * @return Category
     */
    public function setComment($value)
    {
        $this->__set(self::COMMENT, $value);

        return $this;
    }

    /**
     * Gets 是否删除
     * @return int
     */
    public function getIsDelete()
    {
        return $this->__get(self::IS_DELETE);
    }

    /**
     * Sets 是否删除
     * @param int $value
     * @return Category
     */
    public function setIsDelete($value)
    {
        $this->__set(self::IS_DELETE, $value);

        return $this;
    }

    /**
     * Gets 是否上架
     * @return bool
     */
    public function getIsOnShelf()
    {
        return $this->__get(self::IS_ON_SHELF);
    }

    /**
     * Sets 是否上架
     * @param bool $value
     * @return Category
     */
    public function setIsOnShelf($value)
    {
        $this->__set(self::IS_ON_SHELF, $value);

        return $this;
    }

    /**
     * Gets 发布者
     * @return string
     */
    public function getSendAuthor()
    {
        return $this->__get(self::SEND_AUTHOR);
    }

    /**
     * Sets 发布者
     * @param string $value
     * @return Category
     */
    public function setSendAuthor($value)
    {
        $this->__set(self::SEND_AUTHOR, $value);

        return $this;
    }

    /**
     * Gets 发布时间
     * @return string
     */
    public function getSendTime()
    {
        return $this->__get(self::SEND_TIME);
    }

    /**
     * Sets 发布时间
     * @param string $value
     * @return Category
     */
    public function setSendTime($value)
    {
        $this->__set(self::SEND_TIME, $value);

        return $this;
    }

    /**
     * Gets 上架时间
     * @return string
     */
    public function getShelfTime()
    {
        return $this->__get(self::SHELF_TIME);
    }

    /**
     * Sets 上架时间
     * @param string $value
     * @return Category
     */
    public function setShelfTime($value)
    {
        $this->__set(self::SHELF_TIME, $value);

        return $this;
    }
}
?>