<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace MP\Model\Mp;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class HouseMemberType implements ValidatorInterface
{
    const OWNER = 'owner';
    const EMPLOYEE = 'employee';
    const MEMBER = 'member';
    const LESSEE = 'lessee';
    const FRIENDS = 'friends';
    const RELATIVE = 'relative';
    const ORDER = 'order';
    const MANAGER = 'manager';
    const CHEF = 'chef';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::OWNER => _META_('mp.house_member_type.owner'),
                self::EMPLOYEE => _META_('mp.house_member_type.employee'),
                self::MEMBER => _META_('mp.house_member_type.member'),
                self::LESSEE => _META_('mp.house_member_type.lessee'),
                self::FRIENDS => _META_('mp.house_member_type.friends'),
                self::RELATIVE => _META_('mp.house_member_type.relative'),
                self::ORDER => _META_('mp.house_member_type.order'),
                self::MANAGER => _META_('mp.house_member_type.manager'),
                self::CHEF => _META_('mp.house_member_type.chef'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::OWNER;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}