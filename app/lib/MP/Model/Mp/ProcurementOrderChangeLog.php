<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class ProcurementOrderChangeLog extends Model
{
    const PROCUREMENT_ORDER_CHANGE_LOG_ID = 'procurement_order_change_log_id';
    const ORDER_ID = 'order_id';
    const OPERATOR = 'operator';
    const CHANGE_TIME = 'change_time';
    const COMMENT = 'comment';
    const STATUS_BEFORE = 'status_before';
    const STATUS_AFTER = 'status_after';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'procurement_order_change_log',
                'procurement_order_change_log_id',
                [
                    'procurement_order_change_log_id' => ['name' => _META_('mp.procurement_order_change_log.procurement_order_change_log_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'order_id' => ['name' => _META_('mp.procurement_order_change_log.order_id'), 'type' => 'text', 'length' => 32, 'required' => true],
                    'operator' => ['name' => _META_('mp.procurement_order_change_log.operator'), 'type' => 'text', 'length' => 128, 'required' => true],
                    'change_time' => ['name' => _META_('mp.procurement_order_change_log.change_time'), 'type' => 'datetime', 'required' => true],
                    'comment' => ['name' => _META_('mp.procurement_order_change_log.comment'), 'type' => 'text', 'length' => 255, 'required' => true],
                    'status_before' => ['name' => _META_('mp.procurement_order_change_log.status_before'), 'type' => 'text', 'max' => 32, 'required' => true, 'enum' => new ProcurementOrderStatus(), 'db_insert' => true],
                    'status_after' => ['name' => _META_('mp.procurement_order_change_log.status_after'), 'type' => 'text', 'max' => 32, 'required' => true, 'enum' => new ProcurementOrderStatus(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'procurement_order_change_log_id',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getProcurementOrderChangeLogID()
    {
        return $this->__get(self::PROCUREMENT_ORDER_CHANGE_LOG_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return ProcurementOrderChangeLog
     */
    public function setProcurementOrderChangeLogID($value)
    {
        $this->__set(self::PROCUREMENT_ORDER_CHANGE_LOG_ID, $value);

        return $this;
    }

    /**
     * Gets 订单号
     * @return string
     */
    public function getOrderID()
    {
        return $this->__get(self::ORDER_ID);
    }

    /**
     * Sets 订单号
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setOrderID($value)
    {
        $this->__set(self::ORDER_ID, $value);

        return $this;
    }

    /**
     * Gets 操作人
     * @return string
     */
    public function getOperator()
    {
        return $this->__get(self::OPERATOR);
    }

    /**
     * Sets 操作人
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setOperator($value)
    {
        $this->__set(self::OPERATOR, $value);

        return $this;
    }

    /**
     * Gets 操作时间
     * @return string
     */
    public function getChangeTime()
    {
        return $this->__get(self::CHANGE_TIME);
    }

    /**
     * Sets 操作时间
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setChangeTime($value)
    {
        $this->__set(self::CHANGE_TIME, $value);

        return $this;
    }

    /**
     * Gets 备注
     * @return string
     */
    public function getComment()
    {
        return $this->__get(self::COMMENT);
    }

    /**
     * Sets 备注
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setComment($value)
    {
        $this->__set(self::COMMENT, $value);

        return $this;
    }

    /**
     * Gets 变更前状态
     * @return string
     */
    public function getStatusBefore()
    {
        return $this->__get(self::STATUS_BEFORE);
    }

    /**
     * Gets 变更前状态 display name
     * @return string
     */
    public function getStatusBefore_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('status_before');
        return $option['enum']::getDisplayName($this->__get(self::STATUS_BEFORE));
    }

    /**
     * Sets 变更前状态
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setStatusBefore($value)
    {
        $this->__set(self::STATUS_BEFORE, $value);

        return $this;
    }

    /**
     * Gets 变更后状态
     * @return string
     */
    public function getStatusAfter()
    {
        return $this->__get(self::STATUS_AFTER);
    }

    /**
     * Gets 变更后状态 display name
     * @return string
     */
    public function getStatusAfter_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('status_after');
        return $option['enum']::getDisplayName($this->__get(self::STATUS_AFTER));
    }

    /**
     * Sets 变更后状态
     * @param string $value
     * @return ProcurementOrderChangeLog
     */
    public function setStatusAfter($value)
    {
        $this->__set(self::STATUS_AFTER, $value);

        return $this;
    }
}
?>