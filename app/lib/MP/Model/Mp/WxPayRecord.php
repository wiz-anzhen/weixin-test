<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class WxPayRecord extends Model
{
    const WX_PAY_RECORD_ID = 'wx_pay_record_id';
    const _CREATED_AT = '_created_at';
    const ORDER_ID = 'order_id';
    const WX_USER_ID = 'wx_user_id';
    const USERNAME = 'username';
    const MP_USER_ID = 'mp_user_id';
    const COMMUNITY_ID = 'community_id';
    const OUTTRADENO = 'outTradeNo';
    const TRANSACTIONID = 'transactionId';
    const PAY_ITERM = 'pay_iterm';
    const PAY_START_DATE = 'pay_start_date';
    const PAY_END_DATE = 'pay_end_date';
    const PAY_VALUE = 'pay_value';
    const PAY_FINISHED = 'pay_finished';
    const MARK = 'mark';
    const PAY_METHOD = 'pay_method';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'wx_pay_record',
                'wx_pay_record_id',
                [
                    'wx_pay_record_id' => ['name' => _META_('mp.wx_pay_record.wx_pay_record_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('mp.wx_pay_record._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'order_id' => ['name' => _META_('mp.wx_pay_record.order_id'), 'type' => 'int', 'length' => 20, 'required' => true],
                    'wx_user_id' => ['name' => _META_('mp.wx_pay_record.wx_user_id'), 'type' => 'text', 'length' => 64, 'required' => true],
                    'username' => ['name' => _META_('mp.wx_pay_record.username'), 'type' => 'text', 'length' => 128, 'required' => true],
                    'mp_user_id' => ['name' => _META_('mp.wx_pay_record.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'community_id' => ['name' => _META_('mp.wx_pay_record.community_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'outTradeNo' => ['name' => _META_('mp.wx_pay_record.outTradeNo'), 'type' => 'text', 'length' => 128],
                    'transactionId' => ['name' => _META_('mp.wx_pay_record.transactionId'), 'type' => 'text', 'length' => 128],
                    'pay_iterm' => ['name' => _META_('mp.wx_pay_record.pay_iterm'), 'type' => 'text', 'length' => 128, 'required' => true],
                    'pay_start_date' => ['name' => _META_('mp.wx_pay_record.pay_start_date'), 'type' => 'datetime'],
                    'pay_end_date' => ['name' => _META_('mp.wx_pay_record.pay_end_date'), 'type' => 'datetime'],
                    'pay_value' => ['name' => _META_('mp.wx_pay_record.pay_value'), 'type' => 'money', 'db_insert' => true, 'precision' => 2, 'required' => true],
                    'pay_finished' => ['name' => _META_('mp.wx_pay_record.pay_finished'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'mark' => ['name' => _META_('mp.wx_pay_record.mark'), 'type' => 'text'],
                    'pay_method' => ['name' => _META_('mp.wx_pay_record.pay_method'), 'type' => 'text', 'max' => 32, 'required' => true, 'enum' => new PayMethod(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'wx_pay_record_id',
                    'create_timestamp' => '_created_at',
                    'unique_keys' => [['order_id']],
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getWxPayRecordID()
    {
        return $this->__get(self::WX_PAY_RECORD_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return WxPayRecord
     */
    public function setWxPayRecordID($value)
    {
        $this->__set(self::WX_PAY_RECORD_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return WxPayRecord
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 订单号
     * @return int
     */
    public function getOrderID()
    {
        return $this->__get(self::ORDER_ID);
    }

    /**
     * Sets 订单号
     * @param int $value
     * @return WxPayRecord
     */
    public function setOrderID($value)
    {
        $this->__set(self::ORDER_ID, $value);

        return $this;
    }

    /**
     * Gets 微信用户id
     * @return string
     */
    public function getWxUserID()
    {
        return $this->__get(self::WX_USER_ID);
    }

    /**
     * Sets 微信用户id
     * @param string $value
     * @return WxPayRecord
     */
    public function setWxUserID($value)
    {
        $this->__set(self::WX_USER_ID, $value);

        return $this;
    }

    /**
     * Gets 用户姓名
     * @return string
     */
    public function getUsername()
    {
        return $this->__get(self::USERNAME);
    }

    /**
     * Sets 用户姓名
     * @param string $value
     * @return WxPayRecord
     */
    public function setUsername($value)
    {
        $this->__set(self::USERNAME, $value);

        return $this;
    }

    /**
     * Gets 公众账号id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets 公众账号id
     * @param int $value
     * @return WxPayRecord
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets community.community_id
     * @return int
     */
    public function getCommunityID()
    {
        return $this->__get(self::COMMUNITY_ID);
    }

    /**
     * Sets community.community_id
     * @param int $value
     * @return WxPayRecord
     */
    public function setCommunityID($value)
    {
        $this->__set(self::COMMUNITY_ID, $value);

        return $this;
    }

    /**
     * Gets 微信商户订单号
     * @return string
     */
    public function getOuttradeno()
    {
        return $this->__get(self::OUTTRADENO);
    }

    /**
     * Sets 微信商户订单号
     * @param string $value
     * @return WxPayRecord
     */
    public function setOuttradeno($value)
    {
        $this->__set(self::OUTTRADENO, $value);

        return $this;
    }

    /**
     * Gets 微信支付单号
     * @return string
     */
    public function getTransactionid()
    {
        return $this->__get(self::TRANSACTIONID);
    }

    /**
     * Sets 微信支付单号
     * @param string $value
     * @return WxPayRecord
     */
    public function setTransactionid($value)
    {
        $this->__set(self::TRANSACTIONID, $value);

        return $this;
    }

    /**
     * Gets 付款项目
     * @return string
     */
    public function getPayIterm()
    {
        return $this->__get(self::PAY_ITERM);
    }

    /**
     * Sets 付款项目
     * @param string $value
     * @return WxPayRecord
     */
    public function setPayIterm($value)
    {
        $this->__set(self::PAY_ITERM, $value);

        return $this;
    }

    /**
     * Gets 订单开始时间
     * @return string
     */
    public function getPayStartDate()
    {
        return $this->__get(self::PAY_START_DATE);
    }

    /**
     * Sets 订单开始时间
     * @param string $value
     * @return WxPayRecord
     */
    public function setPayStartDate($value)
    {
        $this->__set(self::PAY_START_DATE, $value);

        return $this;
    }

    /**
     * Gets 订单完成时间
     * @return string
     */
    public function getPayEndDate()
    {
        return $this->__get(self::PAY_END_DATE);
    }

    /**
     * Sets 订单完成时间
     * @param string $value
     * @return WxPayRecord
     */
    public function setPayEndDate($value)
    {
        $this->__set(self::PAY_END_DATE, $value);

        return $this;
    }

    /**
     * Gets 支付金额
     * @return float
     */
    public function getPayValue()
    {
        return $this->__get(self::PAY_VALUE);
    }

    /**
     * Sets 支付金额
     * @param float $value
     * @return WxPayRecord
     */
    public function setPayValue($value)
    {
        $this->__set(self::PAY_VALUE, $value);

        return $this;
    }

    /**
     * Gets 是否完成支付
     * @return int
     */
    public function getPayFinished()
    {
        return $this->__get(self::PAY_FINISHED);
    }

    /**
     * Sets 是否完成支付
     * @param int $value
     * @return WxPayRecord
     */
    public function setPayFinished($value)
    {
        $this->__set(self::PAY_FINISHED, $value);

        return $this;
    }

    /**
     * Gets 备注信息
     * @return string
     */
    public function getMark()
    {
        return $this->__get(self::MARK);
    }

    /**
     * Sets 备注信息
     * @param string $value
     * @return WxPayRecord
     */
    public function setMark($value)
    {
        $this->__set(self::MARK, $value);

        return $this;
    }

    /**
     * Gets 付款方式
     * @return string
     */
    public function getPayMethod()
    {
        return $this->__get(self::PAY_METHOD);
    }

    /**
     * Gets 付款方式 display name
     * @return string
     */
    public function getPayMethod_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('pay_method');
        return $option['enum']::getDisplayName($this->__get(self::PAY_METHOD));
    }

    /**
     * Sets 付款方式
     * @param string $value
     * @return WxPayRecord
     */
    public function setPayMethod($value)
    {
        $this->__set(self::PAY_METHOD, $value);

        return $this;
    }
}
?>