<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class ArticleComment extends Model
{
    const ARTICLE_COMMENT_ID = 'article_comment_id';
    const _CREATED_AT = '_created_at';
    const MP_USER_ID = 'mp_user_id';
    const WX_USER_ID = 'wx_user_id';
    const MP_ARTICLE_ID = 'mp_article_id';
    const COMMENT = 'comment';
    const MAIL_RECIPIENTS = 'mail_recipients';
    const MAIL_CONTENT = 'mail_content';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'article_comment',
                'article_comment_id',
                [
                    'article_comment_id' => ['name' => _META_('mp.article_comment.article_comment_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('mp.article_comment._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'mp_user_id' => ['name' => _META_('mp.article_comment.mp_user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'wx_user_id' => ['name' => _META_('mp.article_comment.wx_user_id'), 'type' => 'text', 'length' => 64, 'required' => true],
                    'mp_article_id' => ['name' => _META_('mp.article_comment.mp_article_id'), 'type' => 'text', 'length' => 32, 'required' => true],
                    'comment' => ['name' => _META_('mp.article_comment.comment'), 'type' => 'text', 'required' => true],
                    'mail_recipients' => ['name' => _META_('mp.article_comment.mail_recipients'), 'type' => 'text'],
                    'mail_content' => ['name' => _META_('mp.article_comment.mail_content'), 'type' => 'text', 'db_insert' => true, 'required' => true],
                ],
                [
                    'auto_increment_id' => 'article_comment_id',
                    'create_timestamp' => '_created_at',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getArticleCommentID()
    {
        return $this->__get(self::ARTICLE_COMMENT_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return ArticleComment
     */
    public function setArticleCommentID($value)
    {
        $this->__set(self::ARTICLE_COMMENT_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return ArticleComment
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets mp_user.mp_user_id
     * @return int
     */
    public function getMpUserID()
    {
        return $this->__get(self::MP_USER_ID);
    }

    /**
     * Sets mp_user.mp_user_id
     * @param int $value
     * @return ArticleComment
     */
    public function setMpUserID($value)
    {
        $this->__set(self::MP_USER_ID, $value);

        return $this;
    }

    /**
     * Gets wx_user.wx_user_id
     * @return string
     */
    public function getWxUserID()
    {
        return $this->__get(self::WX_USER_ID);
    }

    /**
     * Sets wx_user.wx_user_id
     * @param string $value
     * @return ArticleComment
     */
    public function setWxUserID($value)
    {
        $this->__set(self::WX_USER_ID, $value);

        return $this;
    }

    /**
     * Gets mp_article.mp_article_id
     * @return string
     */
    public function getMpArticleID()
    {
        return $this->__get(self::MP_ARTICLE_ID);
    }

    /**
     * Sets mp_article.mp_article_id
     * @param string $value
     * @return ArticleComment
     */
    public function setMpArticleID($value)
    {
        $this->__set(self::MP_ARTICLE_ID, $value);

        return $this;
    }

    /**
     * Gets 
     * @return string
     */
    public function getComment()
    {
        return $this->__get(self::COMMENT);
    }

    /**
     * Sets 
     * @param string $value
     * @return ArticleComment
     */
    public function setComment($value)
    {
        $this->__set(self::COMMENT, $value);

        return $this;
    }

    /**
     * Gets 接收人邮件列表
     * @return string
     */
    public function getMailRecipients()
    {
        return $this->__get(self::MAIL_RECIPIENTS);
    }

    /**
     * Sets 接收人邮件列表
     * @param string $value
     * @return ArticleComment
     */
    public function setMailRecipients($value)
    {
        $this->__set(self::MAIL_RECIPIENTS, $value);

        return $this;
    }

    /**
     * Gets 邮件内容
     * @return string
     */
    public function getMailContent()
    {
        return $this->__get(self::MAIL_CONTENT);
    }

    /**
     * Sets 邮件内容
     * @param string $value
     * @return ArticleComment
     */
    public function setMailContent($value)
    {
        $this->__set(self::MAIL_CONTENT, $value);

        return $this;
    }
}
?>