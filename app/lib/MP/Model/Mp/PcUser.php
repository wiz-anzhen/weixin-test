<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under MP\Business namespace.
namespace MP\Model\Mp;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class PcUser extends Model
{
    const PC_USER_ID = 'pc_user_id';
    const _CREATED_AT = '_created_at';
    const _UPDATED_AT = '_updated_at';
    const USER_ID = 'user_id';
    const USERNAME = 'username';
    const IS_PAYING_USER = 'is_paying_user';
    const LOGO_PATH = 'logo_path';
    const EXPIRED_TIME = 'expired_time';
    const LAST_ACCESS = 'last_access';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'mp',
                'pc_user',
                'pc_user_id',
                [
                    'pc_user_id' => ['name' => _META_('mp.pc_user.pc_user_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('mp.pc_user._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    '_updated_at' => ['name' => _META_('mp.pc_user._updated_at'), 'type' => 'timestamp', 'required' => true, 'db_insert' => true, 'roc' => true, 'rou' => true],
                    'user_id' => ['name' => _META_('mp.pc_user.user_id'), 'type' => 'int', 'length' => 10, 'required' => true],
                    'username' => ['name' => _META_('mp.pc_user.username'), 'type' => 'text', 'length' => 255, 'required' => true],
                    'is_paying_user' => ['name' => _META_('mp.pc_user.is_paying_user'), 'type' => 'int', 'length' => 1, 'db_insert' => true, 'required' => true],
                    'logo_path' => ['name' => _META_('mp.pc_user.logo_path'), 'type' => 'text', 'length' => 2083],
                    'expired_time' => ['name' => _META_('mp.pc_user.expired_time'), 'type' => 'datetime', 'required' => true],
                    'last_access' => ['name' => _META_('mp.pc_user.last_access'), 'type' => 'datetime'],
                ],
                [
                    'auto_increment_id' => 'pc_user_id',
                    'create_timestamp' => '_created_at',
                    'update_timestamp' => '_updated_at',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getPcUserID()
    {
        return $this->__get(self::PC_USER_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return PcUser
     */
    public function setPcUserID($value)
    {
        $this->__set(self::PC_USER_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return PcUser
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets updatedat
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->__get(self::_UPDATED_AT);
    }

    /**
     * Sets updatedat
     * @param string $value
     * @return PcUser
     */
    public function setUpdatedAt($value)
    {
        $this->__set(self::_UPDATED_AT, $value);

        return $this;
    }

    /**
     * Gets system.user.user_id
     * @return int
     */
    public function getUserID()
    {
        return $this->__get(self::USER_ID);
    }

    /**
     * Sets system.user.user_id
     * @param int $value
     * @return PcUser
     */
    public function setUserID($value)
    {
        $this->__set(self::USER_ID, $value);

        return $this;
    }

    /**
     * Gets 用户账号
     * @return string
     */
    public function getUsername()
    {
        return $this->__get(self::USERNAME);
    }

    /**
     * Sets 用户账号
     * @param string $value
     * @return PcUser
     */
    public function setUsername($value)
    {
        $this->__set(self::USERNAME, $value);

        return $this;
    }

    /**
     * Gets 是否是付费用户
     * @return int
     */
    public function getIsPayingUser()
    {
        return $this->__get(self::IS_PAYING_USER);
    }

    /**
     * Sets 是否是付费用户
     * @param int $value
     * @return PcUser
     */
    public function setIsPayingUser($value)
    {
        $this->__set(self::IS_PAYING_USER, $value);

        return $this;
    }

    /**
     * Gets 
     * @return string
     */
    public function getLogoPath()
    {
        return $this->__get(self::LOGO_PATH);
    }

    /**
     * Sets 
     * @param string $value
     * @return PcUser
     */
    public function setLogoPath($value)
    {
        $this->__set(self::LOGO_PATH, $value);

        return $this;
    }

    /**
     * Gets 付费过期时间
     * @return string
     */
    public function getExpiredTime()
    {
        return $this->__get(self::EXPIRED_TIME);
    }

    /**
     * Sets 付费过期时间
     * @param string $value
     * @return PcUser
     */
    public function setExpiredTime($value)
    {
        $this->__set(self::EXPIRED_TIME, $value);

        return $this;
    }

    /**
     * Gets 上次访问时间
     * @return string
     */
    public function getLastAccess()
    {
        return $this->__get(self::LAST_ACCESS);
    }

    /**
     * Sets 上次访问时间
     * @param string $value
     * @return PcUser
     */
    public function setLastAccess($value)
    {
        $this->__set(self::LAST_ACCESS, $value);

        return $this;
    }
}
?>